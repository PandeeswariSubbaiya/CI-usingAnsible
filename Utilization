pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building...'
            }
        }

        stage('Test') {
            steps {
                echo 'Testing...'
            }
        }

        stage('Monitor Usage') {
            environment {
                CPU_THRESHOLD = '50'
                MEMORY_THRESHOLD = '50'
                DISK_THRESHOLD = '50'
                EMAIL_ADDRESS = 'pandeeswari1814@gmail.com'
                OUTPUT_FILE = 'output.txt'
            }
            steps {
                sh '''
                    DATE=$(date +"%Y-%m-%d %H:%M:%S")
                    CPU_USAGE=$(top -b -n 1 | grep "%Cpu(s)" | awk '{print $2}')
                    MEMORY_USAGE=$(free | awk 'NR==2{printf "%.2f", $3/$2*100}')
                    DISK_USAGE=$(df -h / | awk 'NR==2{printf "%s", $5}' | cut -d'%' -f1)
                    printf "%-19s %-10s %-13s %-12s\n" "Date and Time" "CPU Usage" "Memory Usage" "Disk Usage"
                    printf "%-19s %-10s %-13s %-12s\n" "$DATE" "$CPU_USAGE%" "$MEMORY_USAGE%" "$DISK_USAGE%"
                    if [ $(echo "$CPU_USAGE < $CPU_THRESHOLD" | bc -l) -eq 1 ] && [ $(echo "$MEMORY_USAGE < $MEMORY_THRESHOLD" | bc -l) -eq 1 ] && [ $(echo "$DISK_USAGE < $DISK_THRESHOLD" | bc -l) -eq 1 ]
                    then
                        echo "Resource usage is below thresholds."
                    else
                        echo "Resource usage is above thresholds. Sending email to $EMAIL_ADDRESS"
                        echo "Resource usage details:" >> $OUTPUT_FILE
                        printf "%-19s %-10s %-13s %-12s\n" "Date and Time" "CPU Usage" "Memory Usage" "Disk Usage" >> $OUTPUT_FILE
                        printf "%-19s %-10s %-13s %-12s\n" "$DATE" "$CPU_USAGE%" "$MEMORY_USAGE%" "$DISK_USAGE%" >> $OUTPUT_FILE
                        mail -s "Resource usage alert" $EMAIL_ADDRESS < $OUTPUT_FILE
                    fi
                '''
            }
        }
    }
}
