pipeline {
    agent any
    stages {
        stage('Monitor System Metrics') {
            steps {
                sh '''
                    #!/bin/bash
                    # Set the threshold for each metric (CPU usage, memory usage, and disk usage)
                        CPU_THRESHOLD=20
                        MEMORY_THRESHOLD=20
                        DISK_THRESHOLD=20
                        EMAIL_ADDRESS=pandeeswari1814@gmail.com
                    CPU_USAGE=$(top -b -n 1 | grep "%Cpu(s)" | awk '{print $2}')
                    mem_usage=$(free | awk '/Mem/{printf("%.2f"), $3/$2*100}')
                    disk_usage=$(df -h | awk '$NF=="/"{printf "%s", $5}')
                    timestamp=$(date +"%Y-%m-%d %H:%M:%S")
                    output="/var/lib/jenkins/output.txt"
                    
                    # Save output to file in table format
                    printf "| %-20s | %-15s | %-15s | %-15s |\n" "Timestamp" "CPU Usage" "Memory Usage" "Disk Usage" >> "$output"
                    printf "| %-20s | %-15s | %-15s | %-15s |\n" "$timestamp" "$cpu_usage%" "$mem_usage%" "$disk_usage" >> "$output"
                    
                   # Send an email notification if any of the metrics breaches the threshold
                    if (( $(echo "$CPU_USAGE > $CPU_THRESHOLD" | bc -l) )); then
                        mail -s "CPU usage threshold breached" "$EMAIL_ADDRESS" < "$OUTPUT_FILE"
                    fi

                    if (( $(echo "$MEMORY_USAGE > $MEMORY_THRESHOLD" | bc -l) )); then
                        mail -s "Memory usage threshold breached" "$EMAIL_ADDRESS" < "$OUTPUT_FILE"
                    fi

                    if (( $(echo "$DISK_USAGE > $DISK_THRESHOLD" | bc -l) )); then
                        mail -s "Disk usage threshold breached" "$EMAIL_ADDRESS" < "$OUTPUT_FILE"
                    fi
                '''
            }
        }
    }
}
